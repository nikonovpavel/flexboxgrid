//===================================================
// SETTING FLEXBOX GRID
//===================================================

// var grid flex
// --------------------------------------------------

$flex-container: 100%;
$flex-item-padding: .4%;

$flex-start: 1;
$flex-end: 12;

$flex-common: 25, 40, 60, 75, 80;

// justify-content: center;
// flex-элементы выравниваются по центру flex-контейнера.

// justify-content: space-between;
// flex-элементы отображаются с равным интервалом между ними,
// а первый и последний flex-элементы выравниваются по краям flex-контейнера.

// justify-content: space-around;
// flex-элементы отображаются с равным интервалом вокруг каждого
// flex-элемента, включая первый и последний flex-элементы.

.flex-container {
	margin: 0 auto;
	display: flex;
	flex-flow: row wrap;
	width: $flex-container;
	justify-content: center;
}

// grid flex item
// --------------------------------------------------

// flex-grow
// Это свойство указывает фактор растягивания flex-элемента, который определяет,
// насколько будет растянут flex-элемент относительно оставшихся flex-элементов
// во flex-контейнере при распределении положительного свободного пространства.
// Если всем flex-элементам задано одно и тоже значение flex-grow,
// тогда все элементы в контейнере будут одинакового размера.
// Значение по умолчанию: 0

// flex-shrink
// Свойство flex-shrink указывает фактор гибкого растягивания, который определяет,
// насколько будет сужен flex-элемент относительно оставшихся flex-элементов во
// flex-контейнере при распределении отрицательного свободного пространства.
// По умолчанию любые flex-элементы могут быть сужены, но если мы установим
// значение flex-shrink в 0 (не сужаются), то они сохранят первоначальный размер.
// Значение по умолчанию: 1

// flex-basis
// Это свойство принимает те же самые значения, что width and height, и указывает
// исходный главный размер flex-элемента, прежде чем свободное пространство
// распределится в соответствии с факторами гибкости.
// Значение по умолчанию: auto

// flex
// Это свойство – сокращённая запись для свойств flex-grow, flex-shrink и flex-basis.
// Наряду с другими значениями, его можно установить также в auto (1 1 auto) и none (0 0 auto).
// Значение по умолчанию: 0 1 auto


.flex-item {
	flex: 0 1 25%;
	min-width: 250px;
	padding: $flex-item-padding;
}

[class*='flex-item-'] {
	flex: 0 1 auto;
	padding: $flex-item-padding;
}

@for $i from $flex-start through $flex-end {
	.flex-item-#{$i} {width: $flex-container / $i;}
}

@each $i in $flex-common {
	.flex-item-#{$i} {width: percentage($i / 100);}
}

// grid flex item modification
// --------------------------------------------------

.flex-content {
	color: $white;
	padding: 20px;
	font-size: 1.6rem;
	text-align: center;
	background-color: color('blue_light', '300');
}

// grid flex width responsive
// --------------------------------------------------

@media only screen and (max-width: $handheld_large) {
	.flex-item {flex: 0 1 50%;}
	@for $i from $flex-start through $flex-end {
		.flex-item-#{$i + $i} {flex: 0 1 50%;}
	}
}

@media only screen and (max-width: $handheld-medium) {
	.flex-item, [class*='flex-item-'] {flex: 0 1 100%;}
}